{"version":3,"sources":["Components/GameSetup.js","Components/Scoreboard.js","Components/QuestionCard.js","Components/FinalScore.js","Components/PlayAgain.js","Components/ScoreAdder.js","Components/Reset.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["GameSetup","props","gameSetup","className","id","onChange","addPlayers","value","onClick","subtractQuestions","gameQuestionCount","addQuestions","startGame","undefined","gameQuestionCountError","Scoreboard","gameStarted","player1","p1Score","player2","p2Score","player3","p3Score","player4","p4Score","QuestionCard","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","gameOver","type","name","toggleQuestion","for","currentQuestion","data","arrQuestion","style","questionUI","question","answerUI","answer","category","title","src","FinalScore","finalScore","PlayAgain","playAgain","ScoreAdder","addToTempScore","nextQuestion","Reset","resetGame","Footer","styles","show","display","hide","App","state","gameCategory","gameDifficulty","players","document","getElementById","p1Name","p2Name","p3Name","p4Name","p1TempScore","p2TempScore","p3TempScore","p4TempScore","questionsLeft","playerData","questions","answers","totalQuestions","questionValue","questionCategory","questionDate","toggle","setState","a","questionCount","fetch","APIcall","json","length","endGame","addToScore","resetTempScore","event","target","checked","tempScore","parseInt","classList","add","remove","addPlayerToArr","playerName","playerScore","push","map","i","index","kye","score","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.26a51b0b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst GameSetup = props => {\r\n\r\n    return (\r\n        <div >\r\n            {props.gameSetup &&\r\n            <div>\r\n                <div className=\"setup\">\r\n\r\n                    <div className=\"setup-option player-select\">\r\n                        <div>Players</div>\r\n                        <select  id=\"players\" onChange={props.addPlayers}>\r\n                            <option value=\"1\">1 Player</option>\r\n                            <option value=\"2\">2 Players</option>\r\n                            <option value=\"3\">3 Players</option>\r\n                            <option value=\"4\">4 Players</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"setup-option center\">\r\n                        <div>QUESTIONS</div>\r\n                        <div  id=\"setup-questions\">\r\n                            <button className=\"question-button\" onClick={props.subtractQuestions}>-</button>\r\n                            <div>{props.gameQuestionCount}</div>\r\n                            <button className=\"question-button\" onClick={props.addQuestions}>+</button>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button className=\"setup-option\" id=\"start-button\" onClick={props.startGame}>Start Game</button>\r\n                </div>\r\n                \r\n                <div className=\"error-section\">\r\n                    {props.gameQuestionCountError !== undefined ? \r\n                        <div className=\"error\">\r\n                            <div> {props.gameQuestionCountError} </div>\r\n                        </div> : <div/>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"bar-lg\"/>\r\n\r\n                <div className=\"how-to-play\">\r\n                    <h1 className=\"how-to-play-title\"> HOW TO PLAY</h1>\r\n                    {/* <div className=\"bar-small\"/> */} \r\n                    <div className=\"how-to-play-content\">\r\n                        <div className=\"how-to-play-section\">\r\n                            <div className=\"how-to-play-subtitle\">SETUP</div>\r\n                            <div>Select how many players will be participating and how many rounds of questions you would like to answer. </div>\r\n                        </div>\r\n                        <div className=\"how-to-play-section\">\r\n                            <div className=\"how-to-play-subtitle\">ROUND PLAY</div>\r\n                            <div>After starting the game, ask the question and start the timer. Select which users got the answer correct below the question card then move to the next round.  </div>\r\n                        </div>\r\n                        <div className=\"how-to-play-section\">\r\n                            <div className=\"how-to-play-subtitle\">SCORING</div>\r\n                            <div>Each question is weighted depending on its difficulty. At the end of the game the points will be tallied to display the winner.   </div>\r\n                        </div>\r\n\r\n                        <div className=\"how-to-play-section how-to-play-subtitle\">Good luck! </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameSetup;","import React, { isValidElement } from 'react'\r\n\r\nconst Scoreboard = props => {\r\n\r\n    return (\r\n        <div >\r\n            {props.gameStarted && \r\n                <div className=\"scoreboard\">\r\n                    <h2>Scoreboard</h2>\r\n                    <div className=\"scores\">\r\n                        {props.player1 &&\r\n                            <div className=\"score\" id=\"score-p1\">\r\n                                <div className=\"score-player-name\" id=\"score-p1-name\"> Player 1 </div> \r\n                                <div className=\"score-player-num\" id=\"score-p1-score\">{props.p1Score} </div> \r\n                            </div>\r\n                        }\r\n\r\n                        {props.player2 &&\r\n                            <div className=\"score\" id=\"score-p2\">\r\n                                <div className=\"score-player-name\" id=\"score-p2-name\"> Player 2 </div> \r\n                                <div className=\"score-player-num\" id=\"score-p2-score\">{props.p2Score} </div> \r\n                            </div>\r\n                        }\r\n\r\n                        {props.player3 &&\r\n                            <div className=\"score\" id=\"score-p3\">\r\n                                <div className=\"score-player-name\" id=\"score-p3-name\"> Player 3 </div> \r\n                                <div className=\"score-player-num\" id=\"score-p3-score\">{props.p3Score} </div> \r\n                            </div>\r\n                        }\r\n\r\n                        {props.player4 &&\r\n                            <div className=\"score\" id=\"score-p4\">\r\n                                <div className=\"score-player-name\" id=\"score-p4-name\"> Player 4 </div> \r\n                                <div className=\"score-player-num\" id=\"score-p4-score\">{props.p4Score} </div> \r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scoreboard","import React from 'react'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst QuestionCard = props => {\r\n\r\n    const toTitleCase = (str) => {\r\n        return str.replace(\r\n            /\\w\\S*/g,\r\n            function(txt) {\r\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n            }\r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n\r\n            {props.gameStarted === true && props.gameOver === false ?\r\n                <div>\r\n                    <input type=\"button\" id=\"questionCard-checkbox\" name=\"questionCard-checkbox\" onClick={props.toggleQuestion}/>\r\n                    <label for=\"questionCard-checkbox\" className=\"card-label\" id=\"check\" onChange={props.toggleQuestion}>\r\n                            <div className=\"card-container\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"question-card-top\">\r\n                                            <div id=\"question-num\"> Question: {props.currentQuestion} </div>\r\n                                            <div id=\"question-value\"> Value: {props.data[props.arrQuestion].value} </div>\r\n                                        </div>    \r\n\r\n                                        {/* \r\n                                        <div> Originally Asked: {props.data[props.arrQuestion].airdate.slice(0,4)} </div>\r\n                                        */}\r\n\r\n                                        <div className=\"qa-box question\" style={props.questionUI} > \r\n                                            <div className=\"qa\"> Question:</div>\r\n                                            <div className=\"qa-text\" > {toTitleCase(props.data[props.arrQuestion].question.replace(/<[^>]+\\>/g, ''))} </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"qa-box answer\" style={props.answerUI}> \r\n                                            <div className=\"qa\"> Answer: </div>\r\n                                            <div className=\"qa-text\" > {toTitleCase(props.data[props.arrQuestion].answer.replace(/<[^>]+\\>/g, ''))} </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"question-card-bottom\">\r\n                                            <div id=\"question-category\"> Category: {toTitleCase(props.data[props.arrQuestion].category.title.replace(/<[^>]+\\>/g, ''))} </div>\r\n\r\n                                            <div className=\"card-flip\" >\r\n                                                <img className=\"flip-icon\" style={props.questionUI} src=\"https://cdn.iconscout.com/icon/free/png-256/flip-1767771-1502351.png\"/>\r\n                                                <div className=\"flip-text\" style={props.questionUI}>Tap to see answer</div>\r\n                                            </div>\r\n\r\n                                            <div className=\"card-flip\" >\r\n                                                <img className=\"flip-icon\" style={props.answerUI} src=\"https://cdn.iconscout.com/icon/free/png-256/flip-1767771-1502351.png\"/>\r\n                                                <div className=\"flip-text\" style={props.answerUI}>Tap to see question</div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                            </div>\r\n\r\n                        {/* \r\n                        <div>\r\n\r\n                            Game Over!\r\n\r\n                        </div>\r\n                        */}\r\n                    </label>\r\n            </div> : <div/>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default QuestionCard;","import React from 'react';\r\n\r\n\r\n\r\nconst FinalScore = (props) =>  {\r\n    return (\r\n        <div>\r\n            {props.gameOver &&\r\n            <div className=\"card-container\">\r\n                <div className=\"card final-score\">\r\n                    <div className=\"final-score-title\">GAME OVER!</div>\r\n                    <div>Final Score</div>\r\n                        {props.finalScore}\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinalScore","import React from 'react';\r\n\r\n\r\nconst PlayAgain = props => {\r\n    return (\r\n        <div>\r\n            {props.gameOver &&\r\n            <button className=\"play-again\" onClick={props.playAgain}>Play Again</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayAgain","import React from 'react'\r\n\r\n\r\nconst ScoreAdder = props => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {props.gameStarted && props.gameOver === false ?\r\n                <div className=\"scoreAdder\">\r\n                    <div className=\"scoreAdder-container\">\r\n                    <div className=\"scoreAdder-title\">Who got it right?</div>\r\n                    </div>\r\n\r\n                    <div className=\"scoreAdder-playerBox\">\r\n                        <input type=\"checkbox\" id=\"p1-check\" value={props.data[props.arrQuestion].value} onChange={props.addToTempScore} /> \r\n                        <input type=\"checkbox\" id=\"p2-check\" value={props.data[props.arrQuestion].value} onChange={props.addToTempScore} /> \r\n                        <input type=\"checkbox\" id=\"p3-check\" value={props.data[props.arrQuestion].value}onChange={props.addToTempScore}/> \r\n                        <input type=\"checkbox\" id=\"p4-check\" value={props.data[props.arrQuestion].value}onChange={props.addToTempScore}/>\r\n\r\n                        {props.player1 && <label className=\"scoreAdder-label p1-incorrect\" id=\"p1ScoreAdder\"  for=\"p1-check\"  >Player1</label> }\r\n                        {props.player2 && <label className=\"scoreAdder-label p2-incorrect\" id=\"p2ScoreAdder\" for=\"p2-check\">Player2</label> }\r\n                        {props.player3 && <label className=\"scoreAdder-label p3-incorrect\" id=\"p3ScoreAdder\" for=\"p3-check\">Player3</label> }\r\n                        {props.player4 && <label className=\"scoreAdder-label p4-incorrect\" id=\"p4ScoreAdder\" for=\"p4-check\">Player4</label> }\r\n                    </div>\r\n                \r\n                <div className=\"scoreAdder-container\">\r\n                    <button className=\"next-question\" onClick={props.nextQuestion}>\r\n                        <div>Next Question</div>\r\n                        <img className=\"arrow-icon\" src=\"https://cdn0.iconfinder.com/data/icons/feather/96/591276-arrow-right-512.png\"/>\r\n                    </button> \r\n                </div>\r\n\r\n\r\n\r\n\r\n                    \r\n                </div> : <div/>\r\n            } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreAdder","import React from 'react';\r\n\r\n\r\nconst Reset = props => {\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            {props.gameStarted == true & props.gameOver === false ? \r\n            <button className=\"reset\" onClick={props.resetGame}>Reset Game</button> : <div/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reset","import React from 'react';\r\n\r\n\r\n\r\nconst Footer = props => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            Created by Mike Guggenbuehl\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.scss';\n\n\nimport GameSetup from './Components/GameSetup';\nimport Scoreboard from './Components/Scoreboard'\nimport QuestionCard from './Components/QuestionCard'\nimport FinalScore from './Components/FinalScore'\nimport PlayAgain from './Components/PlayAgain'\nimport ScoreAdder from './Components/ScoreAdder'\nimport Reset from './Components/Reset'\nimport Footer from './Components/Footer'\n\nconst styles = {\n\n  show: {\n    display: \"block\"\n  },\n\n  hide: {\n    display: \"none\"\n  }\n\n}\n\n\nclass App extends React.Component {\n\n  state = {\n    //Game Setup\n    gameQuestionCount: 10,\n    gameQuestionCountError: undefined,\n    gameCategory: 'random',\n    gameDifficulty: 10,\n    players: document.getElementById(\"players\"),\n\n    //players active\n    player1: true,\n    player2: false,\n    player3: false,\n    player4: false,\n\n    //Names\n    p1Name: undefined,\n    p2Name: undefined,\n    p3Name: undefined,\n    p4Name: undefined,\n\n    //scoreboard;\n    p1Score: 0,\n    p2Score: 0,\n    p3Score: 0,\n    p4Score: 0,\n    p1TempScore: 0,\n    p2TempScore: 0,\n    p3TempScore: 0,\n    p4TempScore: 0,\n    questionsLeft: undefined,\n    playerData: [\n\n    ],\n    finalScore: [],\n\n    //GameState\n    gameStarted: false,\n    currentQuestion: 1,\n    arrQuestion: 0,\n    gameSetup: true,\n    gameOver: false,\n\n    //Question Info\n    data: undefined,\n    questions: undefined,\n    answers: undefined,\n    totalQuestions: 5,\n    questionValue: undefined,\n    questionCategory: undefined,\n    questionDate: undefined,\n\n    //UI\n    toggle: false,\n    questionUI: styles.show,\n    answerUI: styles.hide\n  }\n\n\n  //add # of game questions\n  addQuestions = () => {\n    this.state.gameQuestionCount < 100  ? this.setState({\n      gameQuestionCount: this.state.gameQuestionCount + 5,\n      gameQuestionCountError: undefined,\n    }) : this.setState({gameQuestionCountError: \"Max question amount 100 questions\"})\n  }\n\n  //subtract # of game questions\n  subtractQuestions = () => {\n    this.state.gameQuestionCount > 5 ? this.setState({\n      gameQuestionCount: this.state.gameQuestionCount - 5,\n      gameQuestionCountError: undefined,\n    }) : this.setState({gameQuestionCountError: \"Minimum question amount 5 questions\"})\n  }\n\n  //start game\n  startGame = async () => {\n    const questionCount = this.state.gameQuestionCount + 1\n    const APIcall = await fetch (`https://cors-anywhere.herokuapp.com/http://jservice.io/api/random?count=${questionCount}`)\n    const data = await APIcall.json()\n\n    await this.setState({\n      gameStarted: true,\n      data: data,\n      totalQuestions: data.length,\n      gameSetup: false,\n      gameOver: false,\n      playerData: [],\n      finalScore: [],\n    })\n  }\n\n  //go to next questions\n  nextQuestion = async () => {\n    //increment questions\n    await this.setState({\n      currentQuestion: this.state.currentQuestion + 1,\n      arrQuestion: this.state.arrQuestion + 1,\n    })\n\n    //check if game is over\n    if (this.state.currentQuestion == this.state.totalQuestions) {\n      this.endGame()\n    }\n    //add scores to total\n    this.addToScore()\n    //reset Temp Score to zero\n\n    if (this.state.gameOver === false) {\n      await this.resetTempScore()\n      //show quesion\n      await this.setState({\n        questionUI: styles.show,\n        answerUI: styles.hide\n      })\n    }\n  }\n\n  //toggle between question and answer\n  toggleQuestion = async () => {\n    this.state.toggle === false ? await this.setState({toggle: true}) : await this.setState({toggle: false})\n\n    await this.state.toggle === true ? await this.setState({\n      questionUI: styles.hide,\n      answerUI: styles.show\n    }) : await this.setState({\n      questionUI: styles.show,\n      answerUI: styles.hide\n    })\n  }\n\n  //change the number of players\n  addPlayers = async (event) => {\n    const players = event.target.value;\n    if (players == 1) {\n      await this.setState({\n        player1: true,\n        player2: false,\n        player3: false,\n        player4: false\n      }) \n    }\n\n    if (players == 2) {\n      await this.setState({\n        player1: true,\n        player2: true,\n        player3: false,\n        player4: false\n      })\n    }\n\n    if (players == 3) {\n      await this.setState({\n        player1: true,\n        player2: true,\n        player3: true,\n        player4: false\n      })\n    }\n\n    if (players == 4) {\n      await this.setState({\n        player1: true,\n        player2: true,\n        player3: true,\n        player4: true\n      })\n    }\n  }\n\n  //add current questiont to temp score\n  addToTempScore = async(event) => {\n    const id = event.target.id\n    const checked = event.target.checked\n    const tempScore = parseInt(event.target.value)\n\n    if(checked && id === \"p1-check\") {\n      await this.setState({\n        p1TempScore: tempScore\n      })\n      document.getElementById(\"p1ScoreAdder\" ).classList.add('p1-correct')\n    }\n\n    if(checked && id === \"p2-check\") {\n      await this.setState({\n        p2TempScore: tempScore\n      })\n      document.getElementById(\"p2ScoreAdder\" ).classList.add('p2-correct')\n    } \n\n    if(checked && id === \"p3-check\") {\n      await this.setState({\n        p3TempScore: tempScore\n      })\n      document.getElementById(\"p3ScoreAdder\" ).classList.add('p3-correct')\n    }\n\n    if(checked && id === \"p4-check\") {\n      await this.setState({\n        p4TempScore: tempScore\n      })\n      document.getElementById(\"p4ScoreAdder\" ).classList.add('p4-correct')\n    }\n\n    if(checked === false && id === \"p1-check\") {\n      await this.setState({\n        p1TempScore: 0\n      })\n      document.getElementById(\"p1ScoreAdder\" ).classList.remove('p1-correct')\n    }\n\n    if(checked === false && id === \"p2-check\") {\n      await this.setState({\n        p2TempScore: 0\n      })\n      document.getElementById(\"p2ScoreAdder\" ).classList.remove('p2-correct')\n    }\n\n    if(checked === false && id === \"p3-check\") {\n      await this.setState({\n        p3TempScore: 0\n      })\n      document.getElementById(\"p3ScoreAdder\" ).classList.remove('p3-correct')\n\n    }\n    if(checked === false && id === \"p4-check\") {\n      await this.setState({\n        p4TempScore: 0\n      })\n      document.getElementById(\"p4ScoreAdder\" ).classList.remove('p4-correct')\n\n    }\n  }\n\n  //reset the temp score\n  resetTempScore = async () => {\n    await this.setState({\n      p1TempScore: 0,\n      p2TempScore: 0,\n      p3TempScore: 0,\n      p4TempScore: 0,\n    })\n\n    document.getElementById(\"p1-check\").checked = false\n    document.getElementById(\"p2-check\").checked = false\n    document.getElementById(\"p3-check\").checked = false\n    document.getElementById(\"p4-check\").checked = false\n\n    if (this.state.player1) {\n      document.getElementById(\"p1ScoreAdder\" ).classList.remove('p1-correct')\n    }\n\n    if (this.state.player2) {\n      document.getElementById(\"p2ScoreAdder\" ).classList.remove('p2-correct')\n    }\n\n    if (this.state.player3) {\n      document.getElementById(\"p3ScoreAdder\" ).classList.remove('p3-correct')\n    }\n\n    if (this.state.player4) {\n      document.getElementById(\"p4ScoreAdder\" ).classList.remove('p4-correct')\n    }\n  }\n\n  //add temp score to total score\n  addToScore = async() => {\n    await this.setState({\n      p1Score: this.state.p1Score + this.state.p1TempScore,\n      p2Score: this.state.p2Score + this.state.p2TempScore,\n      p3Score: this.state.p3Score + this.state.p3TempScore,\n      p4Score: this.state.p4Score + this.state.p4TempScore,\n    })\n  }\n\n  //reset game to init setting\n  resetGame = async () => {\n    await this.setState({\n      //Game Setup\n      gameQuestionCount: 10,\n      gameQuestionCountError: undefined,\n      gameCategory: 'random',\n      gameDifficulty: 10,\n      players: document.getElementById(\"players\"),\n\n      //players active\n      player1: true,\n      player2: false,\n      player3: false,\n      player4: false,\n\n      //scoreboard;\n      p1Score: 0,\n      p2Score: 0,\n      p3Score: 0,\n      p4Score: 0,\n      p1TempScore: 0,\n      p2TempScore: 0,\n      p3TempScore: 0,\n      p4TempScore: 0,\n      questionsLeft: undefined,\n      playerData: [],\n      finalScore: [],\n\n      //GameState\n      gameStarted: false,\n      currentQuestion: 1,\n      arrQuestion: 0,\n      gameSetup: true,\n      gameOver: false,\n    })\n  }\n\n  endGame = async () => {\n    \n    const addPlayerToArr = (playerName, playerScore) => {\n      this.state.playerData.push({\n        \"name\": playerName,\n        \"score\": playerScore,\n      })\n    }\n\n    if (this.state.player1) {\n      addPlayerToArr(\"Player 1\", this.state.p1Score)\n    }\n\n    if (this.state.player2) {\n      addPlayerToArr(\"Player 2\", this.state.p2Score)\n    }\n\n    if (this.state.player3) {\n      addPlayerToArr(\"Player 3\", this.state.p3Score)\n    }\n\n    if (this.state.player4) {\n      addPlayerToArr(\"Player 4\", this.state.p4Score)\n    }\n\n    await this.setState({\n      gameOver: true,\n      finalScore: this.state.playerData.map((i, index) => (\n        <div>\n          <div className=\"finalScore\" kye={index}>\n            {i.name} : {i.score}\n          </div>\n        </div>\n      ))\n    })\n  }\n\n  playAgain = async () => {\n\n    this.startGame()\n\n    this.setState({\n      //scoreboard;\n      p1Score: 0,\n      p2Score: 0,\n      p3Score: 0,\n      p4Score: 0,\n      p1TempScore: 0,\n      p2TempScore: 0,\n      p3TempScore: 0,\n      p4TempScore: 0,\n      questionsLeft: undefined,\n      playerData: [],\n      finalScore: [],\n\n      //GameState\n      gameStarted: false,\n      currentQuestion: 1,\n      arrQuestion: 0,\n      gameSetup: true,\n    })\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <div className=\"title-container\">\n          <div className=\"bar-container\">\n            <div className=\"bar\"/>\n          </div>\n          <div className=\"title\">\n            <div className=\"flicker-fast\"> NEON </div>\n            <div className=\"flicker-slow\"> TRIVIA</div>\n          </div>\n          <div className=\"bar-container\">\n            <div className=\"bar\"/>\n          </div>\n        </div>\n\n\n        <GameSetup\n          //GamState\n          startGame={this.startGame}\n          gameSetup={this.state.gameSetup}\n          gameStarted={this.state.gameStarted}\n          //GameSetup\n          gameQuestionCount={this.state.gameQuestionCount}\n          gameQuestionCountError={this.state.gameQuestionCountError}\n          addQuestions={this.addQuestions}\n          subtractQuestions={this.subtractQuestions}\n          addPlayers={this.addPlayers}\n        />\n        \n        <Scoreboard\n          //Game State\n          gameStarted={this.state.gameStarted}\n\n          players={this.state.players}\n          player1={this.state.player1}\n          player2={this.state.player2}\n          player3={this.state.player3}\n          player4={this.state.player4}\n          p1Score={this.state.p1Score}\n          p2Score={this.state.p2Score}\n          p3Score={this.state.p3Score}\n          p4Score={this.state.p4Score}\n\n        />\n\n        <QuestionCard\n          //Question Data\n          data={this.state.data}\n\n          //Game State\n          gameStarted={this.state.gameStarted}\n          currentQuestion={this.state.currentQuestion}\n          arrQuestion={this.state.arrQuestion}\n          gameOver={this.state.gameOver}\n\n          //controls\n          nextQuestion={this.nextQuestion}\n\n          //UI\n          toggleQuestion={this.toggleQuestion}\n          questionUI={this.state.questionUI}\n          answerUI={this.state.answerUI}\n        />\n\n        <ScoreAdder\n          //question data\n          data={this.state.data}\n\n          //Game State\n          gameStarted={this.state.gameStarted}\n          arrQuestion={this.state.arrQuestion}\n          gameOver={this.state.gameOver}\n\n          //players\n          player1={this.state.player1}\n          player2={this.state.player2}\n          player3={this.state.player3}\n          player4={this.state.player4}\n          p1TempScore={this.state.p1TempScore}\n          p2TempScore={this.state.p2TempScore}\n          p3TempScore={this.state.p3TempScore}\n          p4TempScore={this.state.p4TempScore}\n\n          nextQuestion={this.nextQuestion}\n\n          addToTempScore={this.addToTempScore}\n        />\n        <FinalScore\n          gameOver={this.state.gameOver}\n          finalScore={this.state.finalScore}\n        />\n\n        <Reset\n          resetGame={this.resetGame}\n          gameStarted={this.state.gameStarted}\n          gameOver={this.state.gameOver}\n        />\n\n        <PlayAgain\n          gameOver={this.state.gameOver}\n          playAgain={this.playAgain}\n        />\n\n        <Footer/>\n\n\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}